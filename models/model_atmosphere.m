%
%   Copyright 2020 Janis Maczijewski
%
%   Licensed under the Apache License, Version 2.0 (the "License");
%   you may not use this file except in compliance with the License.
%   You may obtain a copy of the License at
%
%       http://www.apache.org/licenses/LICENSE-2.0
%
%   Unless required by applicable law or agreed to in writing, software
%   distributed under the License is distributed on an "AS IS" BASIS,
%   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
%   See the License for the specific language governing permissions and
%   limitations under the License.
%

function r = model_atmosphere(...
    air_density_msl, ...
    height_msl, ...
    scale_height, ...
    inertial_velocity, ...
    wind_profile_exponent, ...
    wind_ref_height, ...
    wind_ref_speed, ...
    wind_disturbance ...
)

    r = struct(...
        'air_density', nan(1,1), ...
        'wind_speed', nan(1,1), ...
        'wind_velocity', nan(3,1), ...
        'aero_velocity', nan(3,1), ...
        'aero_speed_squared', nan(1,1), ...
        'aero_speed', nan(1,1), ...
        'dynamic_pressure', nan(1,1) ...
    );
    
    r.air_density = air_density_msl * (1 - height_msl/scale_height);
    r.wind_speed = wind_ref_speed * ((max(height_msl,(0.01))/wind_ref_height).^(wind_profile_exponent));
    
    % The inertial coordinates are aligned with the main wind direction
    r.wind_velocity = [r.wind_speed 0 0].' + wind_disturbance;
    r.aero_velocity = inertial_velocity - r.wind_velocity;
    
    r.aero_speed_squared = sum(r.aero_velocity.^2);
    r.aero_speed = sqrt(r.aero_speed_squared + 1e-4);
    r.dynamic_pressure = 0.5 * r.air_density * r.aero_speed_squared;

end

